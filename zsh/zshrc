# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Disable some authentication business for switching to su
ZSH_DISABLE_COMPFIX=true

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# ZSH_THEME="kris"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
export UPDATE_ZSH_DAYS=1

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
# plugins=(git dirpersist vi-mode git-auto-status zsh-autosuggestions)
# plugins=(dirpersist vi-mode git-auto-status zsh-autosuggestions)
# plugins=(vi-mode)

fpath=("$ZSH/plugins/dirpersist" $fpath)
fpath=("$ZSH/plugins/git-auto-status" $fpath)
source $ZSH/plugins/dirpersist/dirpersist.plugin.zsh
source $ZSH/plugins/git-auto-status/git-auto-status.plugin.zsh
source $ZSH/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
# fpath=("$ZSH/plugins/vi-mode" $fpath)
# source $ZSH/plugins/vi-mode/vi-mode.plugin.zsh
source /home/kris/GIT/zsh-vi-mode/zsh-vi-mode.zsh
source $ZSH/oh-my-zsh.sh
source .oh-my-zsh/themes/kris.zsh-theme

# VI_MODE_RESET_PROMPT_ON_MODE_CHANGE=true
# VI_MODE_SET_CURSOR=true

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

export EDITOR='nvim'

# Compilation flags
export ARCHFLAGS="-arch x86_64"

LESS+=" --no-init --quit-if-one-screen"

# Some voodoo for line searching
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "$terminfo[kcuu1]" up-line-or-beginning-search # Up
bindkey "$terminfo[kcud1]" down-line-or-beginning-search # Down

# For more termkeys see /etc/zsh/zshrc

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
setopt HIST_IGNORE_SPACE
alias cd=' cd'
alias ls=' ls'
alias sl=' ls'
alias gs=' gs'
alias gm=' gm'
alias gf=' gf'
alias clear=' clear'
alias clc=' clear'
alias wifi=' wifi'
alias vifm=' vifm'
alias which=' which'
alias hist=' hist'
alias exit=' exit'
alias update=' update'
alias fzf=' fzf'
# alias source=' source'
alias webvpn=' webvpn'
alias :q=' exit'
alias man=' man'
alias startx=' startx'

source ~/.shell/shell_aliases
source ~/.shell/shell_functions

export PATH=/usr/local/matlab/bin:$PATH

# Source local configs if necessary
# [[ -f ~/.vim/.shell_vim ]] && source ~/.vim/.shell_vim
[[ -f ~/.config/nvim/.shell_nvim ]] && source ~/.config/nvim/.shell_nvim
# [[ -f ~/zettel/zettel_functions ]] && source ~/zettel/zettel_functions
export PATH=~/zettel:$PATH
[[ -f "/etc/arch-release" ]] && source ~/.shell/arch_config
[[ -f ~/.local_shell_config ]] && source ~/.local_shell_config
[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh

# Add scripts
export PATH=~/scripts:$PATH

# Add local programs
[ -d "$HOME/.local/bin" ] && export PATH="$HOME/.local/bin:$PATH"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/kezra/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/kezra/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/kezra/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/kezra/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
NTASKS=2
function task_indicator {
    TASK=( task project:work project.not:workflow +READY )
    if [ `"${TASK[@]}" count` -gt "0" ]; then
        OUT=$("${TASK[@]}" minimal 2>/dev/null | head -n -2 | head -n $(($NTASKS+3)) )
        echo "$OUT"
    fi
}

hash task 2>/dev/null && task_indicator

# Add a default command to use ripgrep
export FZF_DEFAULT_COMMAND='rg --files --hidden'

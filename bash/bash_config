# If not running interactively, don't do anything
case $- in
	*i*) ;;
	*) return;;
esac

# Uncomment one of these as necessary
# export EDITOR="vim"
# export EDITOR="nano"

# Do not put instances of clear or history in the history.
export HISTIGNORE="clear:history*:hist *:rm *:git status*:e .:hist:gs"

# don't put duplicate lines or lines starting with space in the history.
export HISTCONTROL=ignoreboth:erasedups

# append to the history file, don't overwrite it
shopt -s histappend

# Save the history from all the terminal sessions
export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000
# If you ever want to edit .bash_history, remove or edit lines of your choice,
# then immediately run: source .bashrc

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
# shopt -s globstar

# include hidden files in copies and moves
shopt -s dotglob

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Add `~/bin` to the `$PATH`
export PATH="$HOME/bin:$PATH";


# Case-insensitive globbing (used in pathname expansion)
shopt -s nocaseglob;

# Autocorrect typos in path names when using `cd`
shopt -s cdspell;

# Enable some Bash 4 features when possible:
# * `autocd`, e.g. `**/qux` will enter `./foo/bar/baz/qux`
# * Recursive globbing, e.g. `echo **/*.txt`
for option in autocd globstar; do
	shopt -s "$option" 2> /dev/null;
done;

# Add tab completion for SSH hostnames based on ~/.ssh/config, ignoring wildcards
[ -e "$HOME/.ssh/config" ] && complete -o "default" -o "nospace" -W "$(grep "^Host" ~/.ssh/config | grep -v "[?*]" | cut -d " " -f2- | tr ' ' '\n')" scp sftp ssh;

# Load bash configurations from other modules
for file in ~/.{bash_sudo,bash_local_config}; do
        [ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;
if [ -f /usr/share/bash-completion/bash_completion ]; then
  . /usr/share/bash-completion/bash_completion
fi
#source /usr/share/bash-completion/completions/git
